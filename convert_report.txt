/* Report generated by PDK at 2021-11-26 01:32:09 -0500 */


--- /Users/ptalbot/Documents/sandbox/fervid-bind/metadata.json	2021-11-26 01:31:37.465295703 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/metadata.json.pdknew	2021-11-26 01:32:09.321093000 -0500
@@ -2,34 +2,68 @@
   "name": "inkblot-bind",
   "version": "7.4.0",
   "author": "inkblot",
-  "license": "Apache-2.0",
   "summary": "ISC BIND name server",
+  "license": "Apache-2.0",
   "source": "git://github.com/inkblot/puppet-bind.git",
   "project_page": "https://github.com/inkblot/puppet-bind",
   "issues_url": "https://github.com/inkblot/puppet-bind/issues",
-  "tags": [ "bind", "dns", "dnssec", "nsupdate" ],
+  "dependencies": [
+    {
+      "name": "puppetlabs/stdlib",
+      "version_requirement": ">= 4.15.0 < 5.0.0"
+    },
+    {
+      "name": "puppetlabs/concat",
+      "version_requirement": ">= 2.2.1 < 5.0.0"
+    }
+  ],
+  "data_provider": "hiera",
   "operatingsystem_support": [
     {
       "operatingsystem": "Debian",
-      "operatingsystemrelease": [ "7", "8", "9"]
+      "operatingsystemrelease": [
+        "7",
+        "8",
+        "9"
+      ]
     },
     {
       "operatingsystem": "Ubuntu",
-      "operatingsystemrelease": [ "12.04", "14.04", "16.04" ]
+      "operatingsystemrelease": [
+        "12.04",
+        "14.04",
+        "16.04"
+      ]
     },
     {
       "operatingsystem": "CentOS",
-      "operatingsystemrelease": [ "6", "7"]
+      "operatingsystemrelease": [
+        "6",
+        "7"
+      ]
     },
     {
       "operatingsystem": "RedHat",
-      "operatingsystemrelease": [ "6", "7" ]
+      "operatingsystemrelease": [
+        "6",
+        "7"
+      ]
     }
   ],
-  "dependencies": [
-    { "name": "puppetlabs/stdlib", "version_requirement": ">= 4.15.0 < 5.0.0" },
-    { "name": "puppetlabs/concat", "version_requirement": ">= 2.2.1 < 5.0.0" }
+  "requirements": [
+    {
+      "name": "puppet",
+      "version_requirement": ">= 6.21.0 < 8.0.0"
+    }
   ],
-  "data_provider": "hiera"
+  "tags": [
+    "bind",
+    "dns",
+    "dnssec",
+    "nsupdate"
+  ],
+  "pdk-version": "2.2.0",
+  "template-url": "pdk-default#2.2.0",
+  "template-ref": "tags/2.2.0-0-g2381db6"
 }


--- /Users/ptalbot/Documents/sandbox/fervid-bind/spec/spec_helper.rb	2021-11-26 01:31:37.466900591 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/spec/spec_helper.rb.pdknew	2021-11-26 01:32:09.325223000 -0500
@@ -1,16 +1,74 @@
+# frozen_string_literal: true
+
+RSpec.configure do |c|
+  c.mock_with :rspec
+end
+
 require 'puppetlabs_spec_helper/module_spec_helper'
 require 'rspec-puppet-facts'
-require 'rspec-puppet'
 
+require 'spec_helper_local' if File.file?(File.join(File.dirname(__FILE__), 'spec_helper_local.rb'))
+
 include RspecPuppetFacts
 
+default_facts = {
+  puppetversion: Puppet.version,
+  facterversion: Facter.version,
+}
+
+default_fact_files = [
+  File.expand_path(File.join(File.dirname(__FILE__), 'default_facts.yml')),
+  File.expand_path(File.join(File.dirname(__FILE__), 'default_module_facts.yml')),
+]
+
+default_fact_files.each do |f|
+  next unless File.exist?(f) && File.readable?(f) && File.size?(f)
+
+  begin
+    default_facts.merge!(YAML.safe_load(File.read(f), [], [], true))
+  rescue => e
+    RSpec.configuration.reporter.message "WARNING: Unable to load #{f}: #{e}"
+  end
+end
+
+# read default_facts and merge them over what is provided by facterdb
+default_facts.each do |fact, value|
+  add_custom_fact fact, value
+end
+
 RSpec.configure do |c|
-  c.hiera_config = File.expand_path(File.join(__FILE__, '../fixtures/hiera.yaml'))
+  c.default_facts = default_facts
+  c.before :each do
+    # set to strictest setting for testing
+    # by default Puppet runs at warning level
+    Puppet.settings[:strict] = :warning
+    Puppet.settings[:strict_variables] = true
+  end
+  c.filter_run_excluding(bolt: true) unless ENV['GEM_BOLT']
   c.after(:suite) do
-    RSpec::Puppet::Coverage.report!
   end
+
+  # Filter backtrace noise
+  backtrace_exclusion_patterns = [
+    %r{spec_helper},
+    %r{gems},
+  ]
+
+  if c.respond_to?(:backtrace_exclusion_patterns)
+    c.backtrace_exclusion_patterns = backtrace_exclusion_patterns
+  elsif c.respond_to?(:backtrace_clean_patterns)
+    c.backtrace_clean_patterns = backtrace_exclusion_patterns
+  end
 end
 
-# Deal with missing fact in puppet firewall module
-add_custom_fact :concat_basedir, '/tmp/concat/basedir'
+# Ensures that a module is defined
+# @param module_name Name of the module
+def ensure_module_defined(module_name)
+  module_name.split('::').reduce(Object) do |last_module, next_module|
+    last_module.const_set(next_module, Module.new) unless last_module.const_defined?(next_module, false)
+    last_module.const_get(next_module, false)
+  end
+end
+
+# 'spec_overrides' from sync.yml will appear below this line


--- /Users/ptalbot/Documents/sandbox/fervid-bind/.rubocop.yml	2021-11-26 01:31:37.456643818 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/.rubocop.yml.pdknew	2021-11-26 01:32:09.365712000 -0500
@@ -1,487 +1,520 @@
+---
+require:
+- rubocop-performance
+- rubocop-rspec
 AllCops:
+  DisplayCopNames: true
+  TargetRubyVersion: '2.4'
+  Include:
+  - "**/*.rb"
   Exclude:
-    # Ignore HTML related things
-    - '**/*.erb'
-    # Ignore vendored gems
-    - 'vendor/**/*'
-    # Ignore code from test fixtures
-    - 'spec/fixtures/**/*'
-    # Ignore lib/** as it contains a lot of offenses for now.
-    # TODO : fix lib/** offenses
-    - 'lib/**/*'
-    # The Puppet pkg directory
-    - 'pkg/**/*'
-
-Lint/ConditionPosition:
+  - bin/*
+  - ".vendor/**/*"
+  - "**/Gemfile"
+  - "**/Rakefile"
+  - pkg/**/*
+  - spec/fixtures/**/*
+  - vendor/**/*
+  - "**/Puppetfile"
+  - "**/Vagrantfile"
+  - "**/Guardfile"
+Layout/LineLength:
+  Description: People have wide screens, use them.
+  Max: 200
+RSpec/BeforeAfterAll:
+  Description: Beware of using after(:all) as it may cause state to leak between tests.
+    A necessary evil in acceptance testing.
+  Exclude:
+  - spec/acceptance/**/*.rb
+RSpec/HookArgument:
+  Description: Prefer explicit :each argument, matching existing module's style
+  EnforcedStyle: each
+RSpec/DescribeSymbol:
+  Exclude:
+  - spec/unit/facter/**/*.rb
+Style/BlockDelimiters:
+  Description: Prefer braces for chaining. Mostly an aesthetical choice. Better to
+    be consistent then.
+  EnforcedStyle: braces_for_chaining
+Style/ClassAndModuleChildren:
+  Description: Compact style reduces the required amount of indentation.
+  EnforcedStyle: compact
+Style/EmptyElse:
+  Description: Enforce against empty else clauses, but allow `nil` for clarity.
+  EnforcedStyle: empty
+Style/FormatString:
+  Description: Following the main puppet project's style, prefer the % format format.
+  EnforcedStyle: percent
+Style/FormatStringToken:
+  Description: Following the main puppet project's style, prefer the simpler template
+    tokens over annotated ones.
+  EnforcedStyle: template
+Style/Lambda:
+  Description: Prefer the keyword for easier discoverability.
+  EnforcedStyle: literal
+Style/RegexpLiteral:
+  Description: Community preference. See https://github.com/voxpupuli/modulesync_config/issues/168
+  EnforcedStyle: percent_r
+Style/TernaryParentheses:
+  Description: Checks for use of parentheses around ternary conditions. Enforce parentheses
+    on complex expressions for better readability, but seriously consider breaking
+    it up.
+  EnforcedStyle: require_parentheses_when_complex
+Style/TrailingCommaInArguments:
+  Description: Prefer always trailing comma on multiline argument lists. This makes
+    diffs, and re-ordering nicer.
+  EnforcedStyleForMultiline: comma
+Style/TrailingCommaInArrayLiteral:
+  Description: Prefer always trailing comma on multiline literals. This makes diffs,
+    and re-ordering nicer.
+  EnforcedStyleForMultiline: comma
+Style/SymbolArray:
+  Description: Using percent style obscures symbolic intent of array's contents.
+  EnforcedStyle: brackets
+RSpec/MessageSpies:
+  EnforcedStyle: receive
+Style/Documentation:
+  Exclude:
+  - lib/puppet/parser/functions/**/*
+  - spec/**/*
+Style/WordArray:
+  EnforcedStyle: brackets
+Performance/AncestorsInclude:
   Enabled: true
-
-Lint/ElseLayout:
+Performance/BigDecimalWithNumericArgument:
   Enabled: true
-
-Lint/UnreachableCode:
+Performance/BlockGivenWithExplicitBlock:
   Enabled: true
-
-Lint/UselessComparison:
+Performance/CaseWhenSplat:
   Enabled: true
-
-Lint/EnsureReturn:
+Performance/ConstantRegexp:
   Enabled: true
-
-Lint/HandleExceptions:
+Performance/MethodObjectAsBlock:
   Enabled: true
-
-Lint/LiteralInCondition:
+Performance/RedundantSortBlock:
   Enabled: true
-
-Lint/ShadowingOuterLocalVariable:
+Performance/RedundantStringChars:
   Enabled: true
-
-Lint/LiteralInInterpolation:
+Performance/ReverseFirst:
   Enabled: true
-
-Style/RedundantReturn:
+Performance/SortReverse:
   Enabled: true
-
-Lint/AmbiguousOperator:
+Performance/Squeeze:
   Enabled: true
-
-Lint/AssignmentInCondition:
+Performance/StringInclude:
   Enabled: true
-
-Style/SpaceBeforeComment:
+Performance/Sum:
   Enabled: true
-
-# DISABLED - not useful
-Style/HashSyntax:
+Style/CollectionMethods:
+  Enabled: true
+Style/MethodCalledOnDoEndBlock:
+  Enabled: true
+Style/StringMethods:
+  Enabled: true
+Bundler/InsecureProtocolSource:
   Enabled: false
-
-# USES: as shortcut for non nil&valid checking a = x() and a.empty?
-# DISABLED - not useful
-Style/AndOr:
+Gemspec/DuplicatedAssignment:
   Enabled: false
-
-# DISABLED - not useful
-Style/RedundantSelf:
+Gemspec/OrderedDependencies:
   Enabled: false
-
-# DISABLED - not useful
-Metrics/MethodLength:
+Gemspec/RequiredRubyVersion:
   Enabled: false
-
-# DISABLED
-Metrics/BlockLength:
+Gemspec/RubyVersionGlobalsUsage:
   Enabled: false
-
-# DISABLED - not useful
-Style/WhileUntilModifier:
+Layout/ArgumentAlignment:
   Enabled: false
-
-# DISABLED - the offender is just haskell envy
-Lint/AmbiguousRegexpLiteral:
+Layout/BeginEndAlignment:
   Enabled: false
-
-# DISABLED
-Security/Eval:
+Layout/ClosingHeredocIndentation:
   Enabled: false
-
-# DISABLED
-Lint/BlockAlignment:
+Layout/EmptyComment:
   Enabled: false
-
-# DISABLED
-Lint/DefEndAlignment:
+Layout/EmptyLineAfterGuardClause:
   Enabled: false
-
-# DISABLED
-Lint/EndAlignment:
+Layout/EmptyLinesAroundArguments:
   Enabled: false
-
-# DISABLED
-Lint/DeprecatedClassMethods:
+Layout/EmptyLinesAroundAttributeAccessor:
   Enabled: false
-
-# DISABLED
-Lint/Loop:
+Layout/EndOfLine:
   Enabled: false
-
-# DISABLED
-Lint/ParenthesesAsGroupedExpression:
+Layout/FirstArgumentIndentation:
   Enabled: false
-
-Lint/RescueException:
+Layout/HashAlignment:
   Enabled: false
-
-Lint/StringConversionInInterpolation:
+Layout/HeredocIndentation:
   Enabled: false
-
-Lint/UnusedBlockArgument:
+Layout/LeadingEmptyLines:
   Enabled: false
-
-Lint/UnusedMethodArgument:
+Layout/SpaceAroundMethodCallOperator:
   Enabled: false
-
-Lint/UselessAccessModifier:
-  Enabled: true
-
-Lint/UselessAssignment:
-  Enabled: true
-
-Lint/Void:
-  Enabled: true
-
-Style/AccessModifierIndentation:
+Layout/SpaceInsideArrayLiteralBrackets:
   Enabled: false
-
-Style/AccessorMethodName:
+Layout/SpaceInsideReferenceBrackets:
   Enabled: false
-
-Style/Alias:
+Lint/BigDecimalNew:
   Enabled: false
-
-Style/AlignArray:
+Lint/BooleanSymbol:
   Enabled: false
-
-Style/AlignHash:
+Lint/ConstantDefinitionInBlock:
   Enabled: false
-
-Style/AlignParameters:
+Lint/DeprecatedOpenSSLConstant:
   Enabled: false
-
-Metrics/BlockNesting:
+Lint/DisjunctiveAssignmentInConstructor:
   Enabled: false
-
-Style/AsciiComments:
+Lint/DuplicateElsifCondition:
   Enabled: false
-
-Style/Attr:
+Lint/DuplicateRequire:
   Enabled: false
-
-Style/BracesAroundHashParameters:
+Lint/DuplicateRescueException:
   Enabled: false
-
-Style/CaseEquality:
+Lint/EmptyConditionalBody:
   Enabled: false
-
-Style/CaseIndentation:
+Lint/EmptyFile:
   Enabled: false
-
-Style/CharacterLiteral:
+Lint/ErbNewArguments:
   Enabled: false
-
-Style/ClassAndModuleCamelCase:
+Lint/FloatComparison:
   Enabled: false
-
-Style/ClassAndModuleChildren:
+Lint/HashCompareByIdentity:
   Enabled: false
-
-Style/ClassCheck:
+Lint/IdentityComparison:
   Enabled: false
-
-Metrics/ClassLength:
+Lint/InterpolationCheck:
   Enabled: false
-
-Style/ClassMethods:
+Lint/MissingCopEnableDirective:
   Enabled: false
-
-Style/ClassVars:
+Lint/MixedRegexpCaptureTypes:
   Enabled: false
-
-Style/WhenThen:
+Lint/NestedPercentLiteral:
   Enabled: false
-
-# DISABLED - not useful
-Style/WordArray:
+Lint/NonDeterministicRequireOrder:
   Enabled: false
-
-Style/UnneededPercentQ:
+Lint/OrderedMagicComments:
   Enabled: false
-
-Style/Tab:
+Lint/OutOfRangeRegexpRef:
   Enabled: false
-
-Style/SpaceBeforeSemicolon:
+Lint/RaiseException:
   Enabled: false
-
-Style/TrailingBlankLines:
+Lint/RedundantCopEnableDirective:
   Enabled: false
-
-Style/SpaceInsideBlockBraces:
+Lint/RedundantRequireStatement:
   Enabled: false
-
-Style/SpaceInsideBrackets:
+Lint/RedundantSafeNavigation:
   Enabled: false
-
-Style/SpaceInsideHashLiteralBraces:
+Lint/RedundantWithIndex:
   Enabled: false
-
-Style/SpaceInsideParens:
+Lint/RedundantWithObject:
   Enabled: false
-
-Style/LeadingCommentSpace:
+Lint/RegexpAsCondition:
   Enabled: false
-
-Style/SpaceAfterColon:
+Lint/ReturnInVoidContext:
   Enabled: false
-
-Style/SpaceAfterComma:
+Lint/SafeNavigationConsistency:
   Enabled: false
-
-Style/SpaceAroundKeyword:
+Lint/SafeNavigationWithEmpty:
   Enabled: false
-
-Style/SpaceAfterMethodName:
+Lint/SelfAssignment:
   Enabled: false
-
-Style/SpaceAfterNot:
+Lint/SendWithMixinArgument:
   Enabled: false
-
-Style/SpaceAfterSemicolon:
+Lint/ShadowedArgument:
   Enabled: false
-
-Style/SpaceAroundEqualsInParameterDefault:
+Lint/StructNewOverride:
   Enabled: false
-
-Style/SpaceAroundOperators:
+Lint/ToJSON:
   Enabled: false
-
-Style/SpaceBeforeBlockBraces:
+Lint/TopLevelReturnWithArgument:
   Enabled: false
-
-Style/SpaceBeforeComma:
+Lint/TrailingCommaInAttributeDeclaration:
   Enabled: false
-
-Style/CollectionMethods:
+Lint/UnreachableLoop:
   Enabled: false
-
-Style/CommentIndentation:
+Lint/UriEscapeUnescape:
   Enabled: false
-
-Style/ColonMethodCall:
+Lint/UriRegexp:
   Enabled: false
-
-Style/CommentAnnotation:
+Lint/UselessMethodDefinition:
   Enabled: false
-
+Lint/UselessTimes:
+  Enabled: false
+Metrics/AbcSize:
+  Enabled: false
+Metrics/BlockLength:
+  Enabled: false
+Metrics/BlockNesting:
+  Enabled: false
+Metrics/ClassLength:
+  Enabled: false
 Metrics/CyclomaticComplexity:
   Enabled: false
-
-Style/ConstantName:
+Metrics/MethodLength:
   Enabled: false
-
-Style/Documentation:
+Metrics/ModuleLength:
   Enabled: false
-
-Style/DefWithParentheses:
+Metrics/ParameterLists:
   Enabled: false
-
-#Style/DeprecatedHashMethods:
-#  Enabled: false
-
-Style/DotPosition:
+Metrics/PerceivedComplexity:
   Enabled: false
-
-# DISABLED - used for converting to bool
-Style/DoubleNegation:
+Migration/DepartmentName:
   Enabled: false
-
-Style/EachWithObject:
+Naming/AccessorMethodName:
   Enabled: false
-
-Style/EmptyLineBetweenDefs:
+Naming/BlockParameterName:
   Enabled: false
-
-Style/IndentArray:
+Naming/HeredocDelimiterCase:
   Enabled: false
-
-Style/IndentHash:
+Naming/HeredocDelimiterNaming:
   Enabled: false
-
-Style/IndentationConsistency:
+Naming/MemoizedInstanceVariableName:
   Enabled: false
-
-Style/IndentationWidth:
+Naming/MethodParameterName:
   Enabled: false
-
-Style/EmptyLines:
+Naming/RescuedExceptionsVariableName:
   Enabled: false
-
-Style/EmptyLinesAroundAccessModifier:
+Naming/VariableNumber:
   Enabled: false
-
-Style/EmptyLiteral:
+Performance/BindCall:
   Enabled: false
-
-Metrics/LineLength:
+Performance/DeletePrefix:
   Enabled: false
-
-Style/MethodCallWithoutArgsParentheses:
+Performance/DeleteSuffix:
   Enabled: false
-
-Style/MethodDefParentheses:
+Performance/InefficientHashSearch:
   Enabled: false
-
-Style/LineEndConcatenation:
+Performance/UnfreezeString:
   Enabled: false
-
-Style/TrailingWhitespace:
+Performance/UriDefaultParser:
   Enabled: false
-
-Style/StringLiterals:
+RSpec/Be:
   Enabled: false
-
-Style/TrailingCommaInLiteral:
+RSpec/Capybara/CurrentPathExpectation:
   Enabled: false
-
-Style/GlobalVars:
+RSpec/Capybara/FeatureMethods:
   Enabled: false
-
-Style/GuardClause:
+RSpec/Capybara/VisibilityMatcher:
   Enabled: false
-
-Style/IfUnlessModifier:
+RSpec/ContextMethod:
   Enabled: false
-
-Style/MultilineIfThen:
+RSpec/ContextWording:
   Enabled: false
-
-Style/NegatedIf:
+RSpec/DescribeClass:
   Enabled: false
-
-Style/NegatedWhile:
+RSpec/EmptyHook:
   Enabled: false
-
-Style/Next:
+RSpec/EmptyLineAfterExample:
   Enabled: false
-
-Style/SingleLineBlockParams:
+RSpec/EmptyLineAfterExampleGroup:
   Enabled: false
-
-Style/SingleLineMethods:
+RSpec/EmptyLineAfterHook:
   Enabled: false
-
-Style/SpecialGlobalVars:
+RSpec/ExampleLength:
   Enabled: false
-
-Style/TrivialAccessors:
+RSpec/ExampleWithoutDescription:
   Enabled: false
-
-Style/UnlessElse:
+RSpec/ExpectChange:
   Enabled: false
-
-Style/VariableInterpolation:
+RSpec/ExpectInHook:
   Enabled: false
-
-Style/VariableName:
+RSpec/FactoryBot/AttributeDefinedStatically:
   Enabled: false
-
-Style/WhileUntilDo:
+RSpec/FactoryBot/CreateList:
   Enabled: false
-
-Style/EvenOdd:
+RSpec/FactoryBot/FactoryClassName:
   Enabled: false
-
-Style/FileName:
+RSpec/HooksBeforeExamples:
   Enabled: false
-
-Style/For:
+RSpec/ImplicitBlockExpectation:
   Enabled: false
-
-Style/Lambda:
+RSpec/ImplicitSubject:
   Enabled: false
-
-Style/MethodName:
+RSpec/LeakyConstantDeclaration:
   Enabled: false
-
-Style/MultilineTernaryOperator:
+RSpec/LetBeforeExamples:
   Enabled: false
-
-Style/NestedTernaryOperator:
+RSpec/MissingExampleGroupArgument:
   Enabled: false
-
-Style/NilComparison:
+RSpec/MultipleExpectations:
   Enabled: false
-
-Style/FormatString:
+RSpec/MultipleMemoizedHelpers:
   Enabled: false
-
-Style/MultilineBlockChain:
+RSpec/MultipleSubjects:
   Enabled: false
-
-Style/Semicolon:
+RSpec/NestedGroups:
   Enabled: false
-
-Style/SignalException:
+RSpec/PredicateMatcher:
   Enabled: false
-
-Style/NonNilCheck:
+RSpec/ReceiveCounts:
   Enabled: false
-
-Style/Not:
+RSpec/ReceiveNever:
   Enabled: false
-
-Style/NumericLiterals:
+RSpec/RepeatedExampleGroupBody:
   Enabled: false
-
-Style/OneLineConditional:
+RSpec/RepeatedExampleGroupDescription:
   Enabled: false
-
-Style/ParenthesesAroundCondition:
+RSpec/RepeatedIncludeExample:
   Enabled: false
-
-Style/PercentLiteralDelimiters:
+RSpec/ReturnFromStub:
   Enabled: false
-
-Style/PerlBackrefs:
+RSpec/SharedExamples:
   Enabled: false
-
-Style/PredicateName:
+RSpec/StubbedMock:
   Enabled: false
-
-Style/RedundantException:
+RSpec/UnspecifiedException:
   Enabled: false
-
-Style/SelfAssignment:
+RSpec/VariableDefinition:
   Enabled: false
-
-Style/Proc:
+RSpec/VoidExpect:
   Enabled: false
-
-Style/RaiseArgs:
+RSpec/Yield:
   Enabled: false
-
-Style/RedundantBegin:
+Security/Open:
   Enabled: false
-
-Style/RescueModifier:
+Style/AccessModifierDeclarations:
   Enabled: false
-
-Style/RegexpLiteral:
+Style/AccessorGrouping:
   Enabled: false
-
-Lint/UnderscorePrefixedVariableName:
+Style/AsciiComments:
   Enabled: false
-
-Metrics/ParameterLists:
+Style/BisectedAttrAccessor:
   Enabled: false
-
-Lint/RequireParentheses:
+Style/CaseLikeIf:
   Enabled: false
-
-Style/SpaceBeforeFirstArg:
+Style/ClassEqualityComparison:
   Enabled: false
-
-Style/ModuleFunction:
+Style/ColonMethodDefinition:
   Enabled: false
-
-Lint/Debugger:
+Style/CombinableLoops:
   Enabled: false
-
-Style/IfWithSemicolon:
+Style/CommentedKeyword:
   Enabled: false
-
+Style/Dir:
+  Enabled: false
+Style/DoubleCopDisableDirective:
+  Enabled: false
+Style/EmptyBlockParameter:
+  Enabled: false
+Style/EmptyLambdaParameter:
+  Enabled: false
 Style/Encoding:
   Enabled: false
-
+Style/EvalWithLocation:
+  Enabled: false
+Style/ExpandPathArguments:
+  Enabled: false
+Style/ExplicitBlockArgument:
+  Enabled: false
+Style/ExponentialNotation:
+  Enabled: false
+Style/FloatDivision:
+  Enabled: false
 Style/FrozenStringLiteralComment:
+  Enabled: false
+Style/GlobalStdStream:
+  Enabled: false
+Style/HashAsLastArrayItem:
+  Enabled: false
+Style/HashLikeCase:
+  Enabled: false
+Style/HashTransformKeys:
+  Enabled: false
+Style/HashTransformValues:
+  Enabled: false
+Style/IfUnlessModifier:
+  Enabled: false
+Style/KeywordParametersOrder:
+  Enabled: false
+Style/MinMax:
+  Enabled: false
+Style/MixinUsage:
+  Enabled: false
+Style/MultilineWhenThen:
+  Enabled: false
+Style/NegatedUnless:
+  Enabled: false
+Style/NumericPredicate:
+  Enabled: false
+Style/OptionalBooleanParameter:
+  Enabled: false
+Style/OrAssignment:
+  Enabled: false
+Style/RandomWithOffset:
+  Enabled: false
+Style/RedundantAssignment:
+  Enabled: false
+Style/RedundantCondition:
+  Enabled: false
+Style/RedundantConditional:
+  Enabled: false
+Style/RedundantFetchBlock:
+  Enabled: false
+Style/RedundantFileExtensionInRequire:
+  Enabled: false
+Style/RedundantRegexpCharacterClass:
+  Enabled: false
+Style/RedundantRegexpEscape:
+  Enabled: false
+Style/RedundantSelfAssignment:
+  Enabled: false
+Style/RedundantSort:
+  Enabled: false
+Style/RescueStandardError:
+  Enabled: false
+Style/SingleArgumentDig:
+  Enabled: false
+Style/SlicingWithRange:
+  Enabled: false
+Style/SoleNestedConditional:
+  Enabled: false
+Style/StderrPuts:
+  Enabled: false
+Style/StringConcatenation:
+  Enabled: false
+Style/Strip:
+  Enabled: false
+Style/SymbolProc:
+  Enabled: false
+Style/TrailingBodyOnClass:
+  Enabled: false
+Style/TrailingBodyOnMethodDefinition:
+  Enabled: false
+Style/TrailingBodyOnModule:
+  Enabled: false
+Style/TrailingCommaInHashLiteral:
+  Enabled: false
+Style/TrailingMethodEndStatement:
+  Enabled: false
+Style/UnpackFirst:
+  Enabled: false
+Lint/DuplicateBranch:
+  Enabled: false
+Lint/DuplicateRegexpCharacterClassElement:
+  Enabled: false
+Lint/EmptyBlock:
+  Enabled: false
+Lint/EmptyClass:
+  Enabled: false
+Lint/NoReturnInBeginEndBlocks:
+  Enabled: false
+Lint/ToEnumArguments:
+  Enabled: false
+Lint/UnexpectedBlockArity:
+  Enabled: false
+Lint/UnmodifiedReduceAccumulator:
+  Enabled: false
+Performance/CollectionLiteralInLoop:
+  Enabled: false
+Style/ArgumentsForwarding:
+  Enabled: false
+Style/CollectionCompact:
+  Enabled: false
+Style/DocumentDynamicEvalDefinition:
+  Enabled: false
+Style/NegatedIfElseCondition:
+  Enabled: false
+Style/NilLambda:
+  Enabled: false
+Style/RedundantArgument:
+  Enabled: false
+Style/SwapValues:
   Enabled: false


--- /Users/ptalbot/Documents/sandbox/fervid-bind/Gemfile	2021-11-26 01:31:37.457282102 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/Gemfile.pdknew	2021-11-26 01:32:09.372012000 -0500
@@ -1,41 +1,63 @@
-source ENV['GEM_SOURCE'] || "https://rubygems.org"
+source ENV['GEM_SOURCE'] || 'https://rubygems.org'
 
-group :test do
-  puppetversion = ENV.key?('PUPPET_VERSION') ? "= #{ENV['PUPPET_VERSION']}" : ['>= 4.9']
-  gem "metadata-json-lint"
-  gem "puppet", puppetversion
-  gem "puppetlabs_spec_helper"
-  gem "rake"
-  gem "rspec", '> 3.4.0'
-  gem "rspec-puppet"
-  gem "rspec-puppet-facts"
-  gem 'rubocop', '> 0.47.0', '< 0.49.0'
-  gem 'simplecov', '>= 0.11.0'
-  gem 'simplecov-console'
+def location_for(place_or_version, fake_version = nil)
+  git_url_regex = %r{\A(?<url>(https?|git)[:@][^#]*)(#(?<branch>.*))?}
+  file_url_regex = %r{\Afile:\/\/(?<path>.*)}
 
-  gem "puppet-lint-absolute_classname-check"
-  gem "puppet-lint-classes_and_types_beginning_with_digits-check"
-  gem "puppet-lint-leading_zero-check"
-  gem 'puppet-lint-resource_reference_syntax'
-  gem "puppet-lint-trailing_comma-check"
-  gem "puppet-lint-unquoted_string-check"
-  gem "puppet-lint-version_comparison-check"
-
-  gem 'json_pure', '<= 2.0.1' if RUBY_VERSION < '2.0.0'
+  if place_or_version && (git_url = place_or_version.match(git_url_regex))
+    [fake_version, { git: git_url[:url], branch: git_url[:branch], require: false }].compact
+  elsif place_or_version && (file_url = place_or_version.match(file_url_regex))
+    ['>= 0', { path: File.expand_path(file_url[:path]), require: false }]
+  else
+    [place_or_version, { require: false }]
+  end
 end
 
+ruby_version_segments = Gem::Version.new(RUBY_VERSION.dup).segments
+minor_version = ruby_version_segments[0..1].join('.')
+
 group :development do
-  gem "guard-rake" if RUBY_VERSION >= '2.2.5' # per dependency https://rubygems.org/gems/ruby_dep
-  gem "puppet-blacksmith"
-  gem 'puppet-strings'
-  gem "travis" if RUBY_VERSION >= '2.1.0'
-  gem "travis-lint" if RUBY_VERSION >= '2.1.0'
-  gem 'yard'
+  gem "json", '= 2.0.4',                                         require: false if Gem::Requirement.create('~> 2.4.2').satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.1.0',                                         require: false if Gem::Requirement.create(['>= 2.5.0', '< 2.7.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.3.0',                                         require: false if Gem::Requirement.create(['>= 2.7.0', '< 2.8.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "puppet-module-posix-default-r#{minor_version}", '~> 1.0', require: false, platforms: [:ruby]
+  gem "puppet-module-posix-dev-r#{minor_version}", '~> 1.0',     require: false, platforms: [:ruby]
+  gem "puppet-module-win-default-r#{minor_version}", '~> 1.0',   require: false, platforms: [:mswin, :mingw, :x64_mingw]
+  gem "puppet-module-win-dev-r#{minor_version}", '~> 1.0',       require: false, platforms: [:mswin, :mingw, :x64_mingw]
 end
-
 group :system_tests do
-  gem "beaker"
-  gem "beaker-puppet_install_helper"
-  gem "beaker-rspec"
+  gem "puppet-module-posix-system-r#{minor_version}", '~> 1.0', require: false, platforms: [:ruby]
+  gem "puppet-module-win-system-r#{minor_version}", '~> 1.0',   require: false, platforms: [:mswin, :mingw, :x64_mingw]
 end
+
+puppet_version = ENV['PUPPET_GEM_VERSION']
+facter_version = ENV['FACTER_GEM_VERSION']
+hiera_version = ENV['HIERA_GEM_VERSION']
+
+gems = {}
+
+gems['puppet'] = location_for(puppet_version)
+
+# If facter or hiera versions have been specified via the environment
+# variables
+
+gems['facter'] = location_for(facter_version) if facter_version
+gems['hiera'] = location_for(hiera_version) if hiera_version
+
+gems.each do |gem_name, gem_params|
+  gem gem_name, *gem_params
+end
+
+# Evaluate Gemfile.local and ~/.gemfile if they exist
+extra_gemfiles = [
+  "#{__FILE__}.local",
+  File.join(Dir.home, '.gemfile'),
+]
+
+extra_gemfiles.each do |gemfile|
+  if File.file?(gemfile) && File.readable?(gemfile)
+    eval(File.read(gemfile), binding)
+  end
+end
+# vim: syntax=ruby


--- /Users/ptalbot/Documents/sandbox/fervid-bind/.gitignore	2021-11-26 01:31:37.456365961 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/.gitignore.pdknew	2021-11-26 01:32:09.374563000 -0500
@@ -1,15 +1,29 @@
-pkg/
-.*.sw?
-Gemfile.lock
-spec/fixtures/manifests
-spec/fixtures/modules
-Gemfile.lock
-.rspec_system
-.vagrant
-.bundle
-vendor
-junit
-log
+.git/
+.*.sw[op]
+.metadata
 .yardoc
-coverage
+.yardwarns
+*.iml
+/.bundle/
+/.idea/
+/.vagrant/
+/coverage/
+/bin/
+/doc/
+/Gemfile.local
+/Gemfile.lock
+/junit/
+/log/
+/pkg/
+/spec/fixtures/manifests/
+/spec/fixtures/modules/
+/tmp/
+/vendor/
+/convert_report.txt
+/update_report.txt
+.DS_Store
+.project
+.envrc
+/inventory.yaml
+/spec/fixtures/litmus_inventory.yaml


--- /Users/ptalbot/Documents/sandbox/fervid-bind/.travis.yml	2021-11-26 01:31:37.456988186 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/.travis.yml.pdknew	2021-11-26 01:32:09.376994000 -0500
@@ -1,21 +1,46 @@
 ---
+os: linux
+dist: xenial
 language: ruby
-sudo: false
-bundler_args: --without development system_tests
-before_install: rm Gemfile.lock || true
-script: bundle exec rake test
-env:
-  - PUPPET_GEM_VERSION="~> 4.0.0"
-  - PUPPET_GEM_VERSION="~> 4.5.0"
-  - PUPPET_GEM_VERSION="~> 4.9.0"
+cache: bundler
+before_install:
+  - bundle -v
+  - rm -f Gemfile.lock
+  - "# Update system gems if requested. This is useful to temporarily workaround troubles in the test runner"
+  - "# See https://github.com/puppetlabs/pdk-templates/commit/705154d5c437796b821691b707156e1b056d244f for an example of how this was used"
+  - "# Ignore exit code of SIGPIPE'd yes to not fail with shell's pipefail set"
+  - '[ -z "$RUBYGEMS_VERSION" ] || (yes || true) | gem update --system $RUBYGEMS_VERSION'
+  - gem --version
+  - bundle -v
+script:
+  - 'bundle exec rake $CHECK'
+bundler_args: --without system_tests
 rvm:
-  - 2.2
-  - 2.4
-matrix:
-  exclude:
-    - rvm: 2.2
-      env: PUPPET_GEM_VERSION="~> 3.7.0"
-    - rvm: 2.2
-      env: PUPPET_GEM_VERSION="~> 3.8.0"
-  fast_finish: false
+  - 2.5.7
+stages:
+  - static
+  - spec
+  - acceptance
+  -
+    if: tag =~ ^v\d
+    name: deploy
+jobs:
+  fast_finish: true
+  include:
+    -
+      env: CHECK="validate lint check rubocop"
+      stage: static
+    -
+      env: PUPPET_GEM_VERSION="~> 6.0" CHECK=parallel_spec
+      rvm: 2.5.7
+      stage: spec
+    -
+      env: DEPLOY_TO_FORGE=yes
+      stage: deploy
+branches:
+  only:
+    - main
+    - /^v\d/
+notifications:
+  email: false


--- /Users/ptalbot/Documents/sandbox/fervid-bind/.rspec	2021-11-26 01:31:37.456481446 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/.rspec.pdknew	2021-11-26 01:32:09.379108000 -0500
@@ -1,3 +1,3 @@
---format documentation
 --color
+--format documentation


--- /Users/ptalbot/Documents/sandbox/fervid-bind/Rakefile	2021-11-26 01:31:37.457635249 -0500
+++ /Users/ptalbot/Documents/sandbox/fervid-bind/Rakefile.pdknew	2021-11-26 01:32:09.382041000 -0500
@@ -1,63 +1,88 @@
-require 'rubygems'
-require 'bundler/setup'
+# frozen_string_literal: true
 
+require 'bundler'
+require 'puppet_litmus/rake_tasks' if Bundler.rubygems.find_name('puppet_litmus').any?
 require 'puppetlabs_spec_helper/rake_tasks'
-require 'puppet/version'
-require 'puppet-lint/tasks/puppet-lint'
 require 'puppet-syntax/tasks/puppet-syntax'
-require 'metadata-json-lint/rake_task'
-require 'rubocop/rake_task'
+require 'puppet_blacksmith/rake_tasks' if Bundler.rubygems.find_name('puppet-blacksmith').any?
+require 'github_changelog_generator/task' if Bundler.rubygems.find_name('github_changelog_generator').any?
+require 'puppet-strings/tasks' if Bundler.rubygems.find_name('puppet-strings').any?
 
-if Puppet.version.to_f >= 4.9
-    require 'semantic_puppet'
-elsif Puppet.version.to_f >= 3.6 && Puppet.version.to_f < 4.9
-    require 'puppet/vendor/semantic/lib/semantic'
+def changelog_user
+  return unless Rake.application.top_level_tasks.include? "changelog"
+  returnVal = nil || JSON.load(File.read('metadata.json'))['author']
+  raise "unable to find the changelog_user in .sync.yml, or the author in metadata.json" if returnVal.nil?
+  puts "GitHubChangelogGenerator user:#{returnVal}"
+  returnVal
 end
 
-# These gems aren't always present, for instance
-# on Travis with --without development
-begin
-  require 'puppet_blacksmith/rake_tasks'
-rescue LoadError # rubocop:disable Lint/HandleExceptions
-end
+def changelog_project
+  return unless Rake.application.top_level_tasks.include? "changelog"
 
-#RuboCop::RakeTask.new
+  returnVal = nil
+  returnVal ||= begin
+    metadata_source = JSON.load(File.read('metadata.json'))['source']
+    metadata_source_match = metadata_source && metadata_source.match(%r{.*\/([^\/]*?)(?:\.git)?\Z})
 
-exclude_paths = [
-  "bundle/**/*",
-  "pkg/**/*",
-  "vendor/**/*",
-  "spec/**/*",
-]
+    metadata_source_match && metadata_source_match[1]
+  end
 
-# Coverage from puppetlabs-spec-helper requires rcov which
-# doesn't work in anything since 1.8.7
-#Rake::Task[:coverage].clear
+  raise "unable to find the changelog_project in .sync.yml or calculate it from the source in metadata.json" if returnVal.nil?
 
-Rake::Task[:lint].clear
-
-PuppetLint.configuration.relative = true
-PuppetLint.configuration.disable_80chars
-PuppetLint.configuration.disable_class_inherits_from_params_class
-PuppetLint.configuration.disable_class_parameter_defaults
-PuppetLint.configuration.fail_on_warnings = true
-
-PuppetLint::RakeTask.new :lint do |config|
-  config.ignore_paths = exclude_paths
+  puts "GitHubChangelogGenerator project:#{returnVal}"
+  returnVal
 end
 
-PuppetSyntax.exclude_paths = exclude_paths
-
-desc "Run acceptance tests"
-RSpec::Core::RakeTask.new(:acceptance) do |t|
-  t.pattern = 'spec/acceptance'
+def changelog_future_release
+  return unless Rake.application.top_level_tasks.include? "changelog"
+  returnVal = "v%s" % JSON.load(File.read('metadata.json'))['version']
+  raise "unable to find the future_release (version) in metadata.json" if returnVal.nil?
+  puts "GitHubChangelogGenerator future_release:#{returnVal}"
+  returnVal
 end
 
-desc "Populate CONTRIBUTORS file"
-task :contributors do
-  system("git log --format='%aN' | sort -u > CONTRIBUTORS")
-end
+PuppetLint.configuration.send('disable_relative')
 
-desc "Run syntax, lint, and spec tests."
-task :test => %i(metadata_lint syntax lint rubocop spec)
+if Bundler.rubygems.find_name('github_changelog_generator').any?
+  GitHubChangelogGenerator::RakeTask.new :changelog do |config|
+    raise "Set CHANGELOG_GITHUB_TOKEN environment variable eg 'export CHANGELOG_GITHUB_TOKEN=valid_token_here'" if Rake.application.top_level_tasks.include? "changelog" and ENV['CHANGELOG_GITHUB_TOKEN'].nil?
+    config.user = "#{changelog_user}"
+    config.project = "#{changelog_project}"
+    config.future_release = "#{changelog_future_release}"
+    config.exclude_labels = ['maintenance']
+    config.header = "# Change log\n\nAll notable changes to this project will be documented in this file. The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/) and this project adheres to [Semantic Versioning](http://semver.org)."
+    config.add_pr_wo_labels = true
+    config.issues = false
+    config.merge_prefix = "### UNCATEGORIZED PRS; LABEL THEM ON GITHUB"
+    config.configure_sections = {
+      "Changed" => {
+        "prefix" => "### Changed",
+        "labels" => ["backwards-incompatible"],
+      },
+      "Added" => {
+        "prefix" => "### Added",
+        "labels" => ["enhancement", "feature"],
+      },
+      "Fixed" => {
+        "prefix" => "### Fixed",
+        "labels" => ["bug", "documentation", "bugfix"],
+      },
+    }
+  end
+else
+  desc 'Generate a Changelog from GitHub'
+  task :changelog do
+    raise <<EOM
+The changelog tasks depends on recent features of the github_changelog_generator gem.
+Please manually add it to your .sync.yml for now, and run `pdk update`:
+---
+Gemfile:
+  optional:
+    ':development':
+      - gem: 'github_changelog_generator'
+        version: '~> 1.15'
+        condition: "Gem::Version.new(RUBY_VERSION.dup) >= Gem::Version.new('2.3.0')"
+EOM
+  end
+end
